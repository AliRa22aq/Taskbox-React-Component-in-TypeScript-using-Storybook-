[{"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\Task.stories.tsx":"1","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\Task.tsx":"2","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\store\\taskSlice.tsx":"3","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\TaskList.stories.tsx":"4","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\TaskList.tsx":"5","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\InboxScreen.stories.tsx":"6","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\InboxScreen.tsx":"7","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\App.tsx":"8","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\reportWebVitals.ts":"9","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\Header.tsx":"10"},{"size":732,"mtime":1609840717502,"results":"11","hashOfConfig":"12"},{"size":1518,"mtime":1609867477228,"results":"13","hashOfConfig":"12"},{"size":1532,"mtime":1609868583180,"results":"14","hashOfConfig":"12"},{"size":1936,"mtime":1609851706384,"results":"15","hashOfConfig":"12"},{"size":2155,"mtime":1609853556469,"results":"16","hashOfConfig":"12"},{"size":935,"mtime":1609867206139,"results":"17","hashOfConfig":"12"},{"size":1627,"mtime":1609869944083,"results":"18","hashOfConfig":"12"},{"size":325,"mtime":1609867614905,"results":"19","hashOfConfig":"12"},{"size":425,"mtime":1606283917628,"results":"20","hashOfConfig":"12"},{"size":214,"mtime":1609867575583,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1hslq3w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\Task.stories.tsx",["44"],"import React from 'react';\r\nimport Task, {TasksProps} from '../components/Task';\r\nimport { Story } from '@storybook/react/types-6-0';\r\n\r\nexport default {\r\n  component: Task,\r\n  title: 'Task',\r\n};\r\n\r\nconst Template:Story<TasksProps> = args => <Task {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  task: {\r\n    id: '1',\r\n    title: 'Test Task',\r\n    state: 'TASK_INBOX',\r\n    updatedAt: new Date(2018, 0, 1, 9, 0),\r\n  },\r\n};\r\n\r\nexport const Pinned = Template.bind({});\r\nPinned.args = {\r\n  task: {\r\n    ...Default.args.task,\r\n    state: 'TASK_PINNED',\r\n  },\r\n};\r\n\r\nexport const Archived = Template.bind({});\r\nArchived.args = {\r\n  task: {\r\n    ...Default.args.task,\r\n    state: 'TASK_ARCHIVED',\r\n  },\r\n};","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\Task.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\store\\taskSlice.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\TaskList.stories.tsx",["45"],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\TaskList.tsx",["46","47","48"],"import React from 'react';\r\nimport { isVariableStatement } from 'typescript';\r\nimport Task, { TaskInterface } from \"./Task\"\r\n\r\nexport interface TasksListProps {\r\n    tasks: TaskInterface[]\r\n    loading: boolean\r\n    onPinTask?: any,\r\n    onArchiveTask?: any\r\n\r\n}\r\n\r\nexport const PureTaskList: React.FC<TasksListProps> = ({ loading, tasks, onPinTask, onArchiveTask }) => {\r\n    const events = {\r\n        onPinTask,\r\n        onArchiveTask,\r\n    };\r\n\r\n    const LoadingRow = (\r\n        <div className=\"loading-item\">\r\n            <span className=\"glow-checkbox\" />\r\n            <span className=\"glow-text\">\r\n                <span>Loading</span> <span>cool</span> <span>state</span>\r\n            </span>\r\n        </div>\r\n    );\r\n    if (loading) {\r\n        return (\r\n            <div className=\"list-items\">\r\n                {LoadingRow}\r\n                {LoadingRow}\r\n                {LoadingRow}\r\n                {LoadingRow}\r\n                {LoadingRow}\r\n                {LoadingRow}\r\n            </div>\r\n        );\r\n    }\r\n    if (tasks.length === 0) {\r\n        return (\r\n            <div className=\"list-items\">\r\n                <div className=\"wrapper-message\">\r\n                    <span className=\"icon-check\" />\r\n                    <div className=\"title-message\">You have no tasks</div>\r\n                    <div className=\"subtitle-message\">Sit back and relax</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    var a;\r\n    var b;\r\n\r\n    //   if (tasks) {\r\n    //    a = tasks?.filter(t => t.state === 'TASK_PINNED')\r\n    //   console.log(a)\r\n    //    b = tasks?.filter(t => t.state !== 'TASK_PINNED')\r\n    //   console.log(b)\r\n    // }\r\n\r\n    //   const tasksInOrder = a?.concat(b)\r\n\r\n\r\n    const tasksInOrder = \r\n            [\r\n                ...tasks?.filter(t => t.state === \"TASK_PINNED\"),\r\n\r\n                ...tasks?.filter(t => t.state !== \"TASK_PINNED\"),\r\n\r\n            ]\r\n\r\n\r\n        return (\r\n            <div className=\"list-items\">\r\n                {tasksInOrder.map(task => (\r\n                    <Task key={task.id} task={task} {...events} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\InboxScreen.stories.tsx",["49"],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\InboxScreen.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\App.tsx",["50"],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\reportWebVitals.ts",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\Header.tsx",[],{"ruleId":"51","severity":1,"message":"52","line":5,"column":1,"nodeType":"53","endLine":8,"endColumn":3},{"ruleId":"51","severity":1,"message":"52","line":7,"column":1,"nodeType":"53","endLine":11,"endColumn":3},{"ruleId":"54","severity":1,"message":"55","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":29},{"ruleId":"54","severity":1,"message":"58","line":50,"column":9,"nodeType":"56","messageId":"57","endLine":50,"endColumn":10},{"ruleId":"54","severity":1,"message":"59","line":51,"column":9,"nodeType":"56","messageId":"57","endLine":51,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":20,"column":1,"nodeType":"53","endLine":24,"endColumn":3},{"ruleId":"54","severity":1,"message":"60","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":12},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'isVariableStatement' is defined but never used.","Identifier","unusedVar","'a' is defined but never used.","'b' is defined but never used.","'logo' is defined but never used."]