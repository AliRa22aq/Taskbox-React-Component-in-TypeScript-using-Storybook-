[{"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\Task.stories.tsx":"1","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\Task.tsx":"2","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\store\\taskSlice.tsx":"3","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\TaskList.stories.tsx":"4","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\TaskList.tsx":"5"},{"size":732,"mtime":1609840717502,"results":"6","hashOfConfig":"7"},{"size":1500,"mtime":1609848400557,"results":"8","hashOfConfig":"7"},{"size":1067,"mtime":1609847898171,"results":"9","hashOfConfig":"7"},{"size":1565,"mtime":1609848943060,"results":"10","hashOfConfig":"7"},{"size":1525,"mtime":1609849067275,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hslq3w",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\Task.stories.tsx",["24"],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\Task.tsx",["25","26","27"],"import React from 'react';\r\nimport '../index.css'\r\nimport {useDispatch} from \"react-redux\"\r\nimport { archiveTask, pinnedTask } from '../store/taskSlice';\r\n\r\nexport interface TaskInterface {\r\n    id?: string\r\n    title?: string\r\n    state?: string\r\n    updatedAt?: Date\r\n}\r\n\r\nexport interface TasksProps {\r\n    task: TaskInterface\r\n  \r\n}\r\n\r\n const Task: React.FC<TasksProps> = ({ task: { id, title, state } }) => {\r\n    //const dispatch = useDispatch();\r\n\r\n    console.log(state)\r\n    return (\r\n        <div className={`list-item ${state}`}  >\r\n            <label className = \"checkbox\" >\r\n                <input \r\n                type=\"checkbox\" \r\n                defaultChecked = {state === \"TASK_ARCHIVED\"}\r\n                disabled = {true}\r\n                name = \"checked\"\r\n                />\r\n                <span className = \"checkbox-custom\" onClick = {() => {} }/>\r\n            </label>\r\n            <div className=\"title\"  >\r\n                <input type=\"text\" value = {title} readOnly = {true} placeholder = \"Input title\" />\r\n            </div>\r\n            \r\n            <div className=\"actions\" onClick = {(event) => event.stopPropagation()} >\r\n                {state !== \"TASK_ARCHIVED\" ? (\r\n                    <a  href = \"/\" onClick = {() => {} }  >\r\n                        <span  onClick = {(e) => {e.preventDefault()}} className = {`icon-star`} ></span>\r\n                    </a>\r\n                ):null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Task;","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\store\\taskSlice.tsx",[],"G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\stories\\TaskList.stories.tsx",["28"],"import React from 'react';\r\nimport TaskList, {TasksListProps} from '../components/TaskList';\r\nimport * as TaskStories from './Task.stories';\r\nimport { Story } from '@storybook/react/types-6-0';\r\n\r\n\r\nexport default {\r\n  component: TaskList,\r\n  title: 'TaskList',\r\n  decorators: [(story: () => React.ReactNode) => <div style={{ padding: '3rem' }}>{story()}</div>],\r\n};\r\n\r\nconst Template: Story<TasksListProps> = args => <TaskList {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n\r\n  tasks: [\r\n    { ...TaskStories.Default.args?.task, id: '1', title: 'Task 1' },\r\n    { ...TaskStories.Default.args?.task, id: '2', title: 'Task 2' },\r\n    { ...TaskStories.Default.args?.task, id: '3', title: 'Task 3' },\r\n    { ...TaskStories.Default.args?.task, id: '4', title: 'Task 4' },\r\n    { ...TaskStories.Default.args?.task, id: '5', title: 'Task 5' },\r\n    { ...TaskStories.Default.args?.task, id: '6', title: 'Task 6' },\r\n  ],\r\n};\r\n\r\nexport const WithPinnedTasks = Template.bind({});\r\nWithPinnedTasks.args = {\r\n  // Shaping the stories through args composition.\r\n  // Inherited data coming from the Default story.\r\n  tasks: [\r\n    ...Default.args?.tasks.slice(0, 5),\r\n    { id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED' },\r\n  ],\r\n};\r\n\r\nexport const Loading = Template.bind({});\r\nLoading.args = {\r\n  tasks: [],\r\n  loading: true,\r\n};\r\n\r\nexport const Empty = Template.bind({});\r\nEmpty.args = {\r\n  // Shaping the stories through args composition.\r\n  // Inherited data coming from the Loading story.\r\n  ...Loading.args,\r\n  loading: false,\r\n};","G:\\PIAIC\\Bootcamp2020\\Projects\\Project-11\\taskbox2\\src\\components\\TaskList.tsx",[],{"ruleId":"29","severity":1,"message":"30","line":5,"column":1,"nodeType":"31","endLine":8,"endColumn":3},{"ruleId":"32","severity":1,"message":"33","line":3,"column":9,"nodeType":"34","messageId":"35","endLine":3,"endColumn":20},{"ruleId":"32","severity":1,"message":"36","line":4,"column":10,"nodeType":"34","messageId":"35","endLine":4,"endColumn":21},{"ruleId":"32","severity":1,"message":"37","line":4,"column":23,"nodeType":"34","messageId":"35","endLine":4,"endColumn":33},{"ruleId":"29","severity":1,"message":"30","line":7,"column":1,"nodeType":"31","endLine":11,"endColumn":3},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'archiveTask' is defined but never used.","'pinnedTask' is defined but never used."]